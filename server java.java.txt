import java.sql.*;

public class ServerScript {

    public static void main(String[] args) {
        String api_key_value = "dp123";

        if (isPostRequest()) {
            String json_st = getRequestParameter("json");
            String api_key = getJsonField(json_st, "api_key");

            if (getdata(api_key).equals(api_key_value)) {
                if (hasRequestParameter("validate")) {
                    String email = getJsonField(json_st, "email");
                    String password = getJsonField(json_st, "password");
                    validate(email, password);
                }

                if (hasRequestParameter("add_user")) {
                    String name = getJsonField(json_st, "name");
                    String email = getJsonField(json_st, "email");
                    String mobile = getJsonField(json_st, "mobile");
                    String password = getJsonField(json_st, "password");
                    add_user(name, email, mobile, password);
                }

                if (hasRequestParameter("get_loc")) {
                    String type = getJsonField(json_st, "type");
                    get_from_location(type);
                }

                if (hasRequestParameter("set_flag")) {
                    String id = getJsonField(json_st, "id");
                    set_flag(id);
                }

                if (hasRequestParameter("send_mail_otp")) {
                    String email = getJsonField(json_st, "email");
                    send_mail_otp(email);
                }
            } else {
                System.out.println("wrong api key");
            }
        } else {
            System.out.println("wrong request. error code = " + getResponseCode());
            System.out.println(getLastError());
        }
    }

    private static String getdata(String data) {
        data = data.trim();
        data = data.replaceAll("\\\\", "");
        data = data.replaceAll("\"", "");
        return data;
    }

    private static void validate(String email, String password) {
        // code = 1 > success > print an email
        // code = 2 > wrong password
        // code = 3 > no rows or no user with that email
        // code = 4 > db connection problem

        try {
            Connection con = getConnection();
            String select = "SELECT * FROM user WHERE email = ?";
            PreparedStatement stmt = con.prepareStatement(select);
            stmt.setString(1, email);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                if (password.equals(rs.getString("password"))) {
                    // success
                    json_send(1, rs.getString("email"));
                } else {
                    // wrong password
                    json_send(2, "wrong password");
                }
            } else {
                // no rows found
                json_send(3, "no rows found");
            }

            con.close();
        } catch (SQLException e) {
            // error in db connection
            json_send(4, e.getMessage());
        }
    }

    private static void add_user(String name, String email, String mobile, String password) {
        // code = 5 > success
        // code = 6 > user added
        // code = 7 > error

        try {
            Connection con = getConnection();
            String select = "SELECT * FROM user WHERE email = ?";
            PreparedStatement stmt = con.prepareStatement(select);
            stmt.setString(1, email);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                json_send(5, "This email already exists");
            } else {
                String insert = "INSERT INTO user (name, email, mobile, password) VALUES (?, ?, ?, ?)";
                PreparedStatement insertStmt = con.prepareStatement(insert);
                insertStmt.setString(1, name);
                insertStmt.setString(2, email);
                insertStmt.setString(3, mobile);
                insertStmt.setString(4, password);

                if (insertStmt.executeUpdate() > 0) {
                    // Success
                    json_send(6, "User added");
                } else {
                    // Error in query execution
                    json_send(7, "Error in query execution");
                }
            }

            con.close();
        } catch (SQLException e) {
            // Error in SELECT query
            json_send(200, "Error in SELECT query: " + e.getMessage());
        }
    }

    private static void get_from_location(String type) {
        if (type.equalsIgnoreCase("last")) {
            last_loc();
        } else if (type.equalsIgnoreCase("unread")) {
            unread();
        } else if (type.equalsIgnoreCase("all")) {
            all_loc();
        }
    }

    private static void last_loc() {
        // code = 8 > last location
        // code = 9 > error

        try {
            Connection con = getConnection();
            String select = "SELECT * FROM location WHERE id = (SELECT MAX(id) FROM location)";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(select);

            if (rs.next()) {
                int id = rs.getInt("id");
                double longitude = rs.getDouble("longitude");
                double latitude = rs.getDouble("latitude");
                String time = rs.getString("timest");
                int flag = rs.getInt("flag");

                String json = "{\"code\": 8, \"id\": " + id + ", \"longitude\": " + longitude +
                        ", \"latitude\": " + latitude + ", \"time\": \"" + time + "\", \"flag\": " + flag + "}";
                System.out.println(json);
            } else {
                json_send(9, "error in query execution");
            }

            con.close();
        } catch (SQLException e) {
            json_send(9, "error in query execution: " + e.getMessage());
        }
    }

    private static void unread() {
        // code = 10 > done
        // code = 11 > error

        try {
            Connection con = getConnection();
            String select = "SELECT * FROM location WHERE flag = 0 ORDER BY id ASC";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(select);

            if (rs.next()) {
                StringBuilder jsonBuilder = new StringBuilder("{\"code\": 10, \"data\": [");

                while (true) {
                    int id = rs.getInt("id");
                    double longitude = rs.getDouble("longitude");
                    double latitude = rs.getDouble("latitude");
                    String time = rs.getString("timest");

                    String json = "{\"id\": " + id + ", \"longitude\": " + longitude +
                            ", \"latitude\": " + latitude + ", \"time\": \"" + time + "\"}";
                    jsonBuilder.append(json);

                    if (!rs.next()) {
                        break;
                    } else {
                        jsonBuilder.append(",");
                    }
                }

                jsonBuilder.append("]}");
                System.out.println(jsonBuilder.toString());
            } else {
                json_send(11, "error in query execution");
            }

            con.close();
        } catch (SQLException e) {
            json_send(11, "error in query execution: " + e.getMessage());
        }
    }

    private static void all_loc() {
        // code = 12 > done
        // code = 13 > error

        try {
            Connection con = getConnection();
            String select = "SELECT * FROM location ORDER BY id ASC";
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(select);

            if (rs.next()) {
                StringBuilder jsonBuilder = new StringBuilder("{\"code\": 12, \"data\": [");

                while (true) {
                    int id = rs.getInt("id");
                    double longitude = rs.getDouble("longitude");
                    double latitude = rs.getDouble("latitude");
                    String time = rs.getString("timest");
                    int flag = rs.getInt("flag");

                    String json = "{\"id\": " + id + ", \"longitude\": " + longitude +
                            ", \"latitude\": " + latitude + ", \"time\": \"" + time + "\", \"flag\": " + flag + "}";
                    jsonBuilder.append(json);

                    if (!rs.next()) {
                        break;
                    } else {
                        jsonBuilder.append(",");
                    }
                }

                jsonBuilder.append("]}");
                System.out.println(jsonBuilder.toString());
            } else {
                json_send(13, "error in query execution");
            }

            con.close();
        } catch (SQLException e) {
            json_send(13, "error in query execution: " + e.getMessage());
        }
    }

    private static void set_flag(int id) {
        try {
            Connection con = getConnection();
            String select = "SELECT * FROM location WHERE id = ?";
            PreparedStatement selectStmt = con.prepareStatement(select);
            selectStmt.setInt(1, id);
            ResultSet rs = selectStmt.executeQuery();

            if (rs.next()) {
                String update = "UPDATE location SET flag = 1 WHERE id = ?";
                PreparedStatement updateStmt = con.prepareStatement(update);
                updateStmt.setInt(1, id);
                int rowsAffected = updateStmt.executeUpdate();

                if (rowsAffected > 0) {
                    json_send(14, "flag has been set");
                } else {
                    json_send(15, "there has been an error for set flag");
                }
            } else {
                json_send(16, "no such id exists");
            }

            con.close();
        } catch (SQLException e) {
            json_send(17, "error in query execution: " + e.getMessage());
        }
    }

    private static void send_mail_otp(String email) {
        int otp = (int) (Math.random() * 900000) + 100000;
        String message = "This is your otp: " + otp;

        try {
            EmailSender emailSender = new EmailSender("vidya.gmit@gmail.com", "uwrxrdoyqcrbgecb");
            emailSender.sendEmail(email, "OTP", message);
            json_send(18, String.valueOf(otp));
        } catch (EmailException e) {
            String errorMessage = e.getMessage();

            if (errorMessage.contains("Invalid address")) {
                json_send(19, "wrong email");
            } else {
                json_send(20, "can't send email");
            }
        }
    }

    private static void json_send(int code, String message) {
        String json = "{\"code\": " + code + ", \"message\": \"" + message + "\"}";
        System.out.println(json);
    }

    private static Connection getConnection() throws SQLException {
        String hostname = "localhost";
        String username = "id20839964_shashvat";
        String dbname = "id20839964_drishtiprabha_db";
        String password_db = "Shashvat.Raj200399";

        return DriverManager.getConnection("jdbc:mysql://" + hostname + "/" + dbname, username, password_db);
    }
}
